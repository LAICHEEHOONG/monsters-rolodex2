{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","MONSTER","id","name","email","CardList","monsters","map","monster","SearchBox","type","placeholder","PLACEHOLDER","onChange","HANDLECHANGE","App","handleChange","event","setState","searchField","target","value","state","searchMonster","fetch","then","res","json","arr","filteredMonster","this","filter","obj","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,YAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCJjBC,EAAW,SAAAR,GACpB,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMS,SAASC,KAAI,SAAAC,GAAO,OAAI,cAAC,EAAD,CAAuBP,QAASO,GAArBA,EAAQN,UCLpDO,G,MAAY,SAACZ,GAEtB,OACI,uBACAC,UAAU,SACVY,KAAK,SACLC,YAAad,EAAMe,YACnBC,SAAUhB,EAAMiB,iBC8DTC,G,wDA9Db,aAAe,IAAD,8BACZ,gBAsBFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SArB1C,EAAKC,MAAQ,CACXd,QAAS,GACTW,YAAa,GACbI,cAAe,IANL,E,gEAYO,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GACJ,OAAOA,EAAIC,UAEZF,MAAK,SAAAG,GACJ,EAAKV,SAAS,CAAEV,QAASoB,IACzB,EAAKV,SAAS,CAAEK,cAAe,EAAKD,MAAMd,e,+BAWtC,IAAD,OAEDqB,EAAkBC,KAAKR,MAAMd,QAAQuB,QAAO,SAAAC,GAChD,OAAOA,EAAI7B,KAAK8B,cAAcC,SAAS,EAAKZ,MAAMH,YAAYc,kBAQhE,OAIE,sBAAKnC,UAAU,MAAf,UACE,kDAEA,cAAC,EAAD,CACEc,YAAY,kBACZE,aAAcgB,KAAKd,eAGrB,cAAC,EAAD,CAAUV,SAAUuB,W,GAtDVM,IAAMC,YCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6ae65188.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className='card-container'>\r\n            <img alt='monster' src={`https://robohash.org/${props.MONSTER.id}?set=set2&size=180x180`} />\r\n            <h2>{props.MONSTER.name}</h2>\r\n            <p>{props.MONSTER.email}</p>\r\n        </div>\r\n    );\r\n} ","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport { Card } from '../card/card.component'\r\n\r\nexport const CardList = props => {\r\n    return (\r\n        <div className='card-list' >\r\n            {\r\n                props.monsters.map(monster => <Card key={monster.id} MONSTER={monster} />)\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = (props) => {\r\n\r\n    return (\r\n        <input\r\n        className='search'\r\n        type='search'\r\n        placeholder={props.PLACEHOLDER}\r\n        onChange={props.HANDLECHANGE}\r\n      />\r\n    )\r\n\r\n}","// import logo from './logo.svg';\nimport React from 'react';\n\nimport { CardList } from './components/card-list/card-list.component.jsx';\n\nimport { SearchBox } from './components/search-box/search-box.component.jsx';\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n\n    this.state = {\n      monster: [],\n      searchField: '',\n      searchMonster: []\n    };\n\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => {\n        return res.json();\n      })\n      .then(arr => {\n        this.setState({ monster: arr });\n        this.setState({ searchMonster: this.state.monster })\n      })\n  }\n\n  handleChange = (event) => {\n    this.setState({ searchField: event.target.value })\n  }\n  \n\n\n\n  render() {\n\n    const filteredMonster = this.state.monster.filter(obj => {\n      return obj.name.toLowerCase().includes(this.state.searchField.toLowerCase())\n    })\n\n \n    \n\n\n\n    return (\n\n\n\n      <div className=\"App\">\n        <h1>MONSTERS ROLODEX</h1>\n\n        <SearchBox \n          PLACEHOLDER='search monsters'\n          HANDLECHANGE={this.handleChange}\n        />\n\n        <CardList monsters={filteredMonster} />\n\n\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n//git remote add origin git@github.com:LAICHEEHOONG/monsters-rolodex.git\n//yarn add gh-pages"],"sourceRoot":""}